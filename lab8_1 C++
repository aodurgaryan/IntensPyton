//–î–∞–Ω–∞ –º–∞—Ç—Ä–∏—Ü–∞ —Ä–∞–∑–º–µ—Ä–∞ ùëÄ√óùëÅ. –í –∫–∞–∂–¥–æ–º —Å—Ç–æ–ª–±—Ü–µ –º–∞—Ç—Ä–∏—Ü—ã –Ω–∞–π—Ç–∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∏–∑ —á–µ—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤.
#include <iostream>
#include <vector>
#include <limits.h> // –î–ª—è INT_MIN

int main() {
    int M, N;
    std::cout << "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç—Ä–æ–∫ (M): ";
    std::cin >> M;
    std::cout << "–í–≤–µ–¥–∏—Ç–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å—Ç–æ–ª–±—Ü–æ–≤ (N): ";
    std::cin >> N;

    std::vector<std::vector<int>> matrix(M, std::vector<int>(N));

    // –í–≤–æ–¥ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –º–∞—Ç—Ä–∏—Ü—ã
    std::cout << "–í–≤–µ–¥–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–∞—Ç—Ä–∏—Ü—ã:\n";
    for (int i = 0; i < M; ++i) {
        for (int j = 0; j < N; ++j) {
            std::cin >> matrix[i][j];
        }
    }

    // –ü–æ–∏—Å–∫ –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã—Ö —á–µ—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ –∫–∞–∂–¥–æ–º —Å—Ç–æ–ª–±—Ü–µ
    for (int j = 0; j < N; ++j) {
        int maxEven = INT_MIN; // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–º –∑–Ω–∞—á–µ–Ω–∏–µ–º
        bool foundEven = false; // –§–ª–∞–≥ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –Ω–∞–ª–∏—á–∏—è —á–µ—Ç–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤

        for (int i = 0; i < M; ++i) {
            if (matrix[i][j] % 2 == 0) { // –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ —á–µ—Ç–Ω–æ—Å—Ç—å
